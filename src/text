require('dotenv').config();

const {
    Client,
    IntentsBitField,
    User,
    GuildMember,
    CommandInteraction
} = require('discord.js');

const client = new Client({
    intents: [
        IntentsBitField.Flags.Guilds,
        IntentsBitField.Flags.GuildMembers,
        IntentsBitField.Flags.GuildMessages,
        IntentsBitField.Flags.MessageContent,


    ],

});
client.login(process.env.TOKEN);

client.on('ready', () => {
    console.log('Ready to work ðŸ¤“');

    setInterval(() => {
        checkAndChangeNickname('660351983970025486', 'NERD');
    }, 1);
});
async function checkAndChangeNickname(memberId, desiredNickname) {
    const guild = client.guilds.cache.get('861317668198678558');
    if (!guild) {
        console.error('Guild not found');
        return;
    }

    let member = guild.members.cache.get(memberId);


    try {
        member = await guild.members.fetch(memberId);
    } catch (error) {
        console.error('Failed to fetch member:', error);
        return;
    }



    if (member.displayName !== desiredNickname) {
        try {

            await member.setNickname(desiredNickname);
            //console.log(`Changed nickname for ${member.user.tag} to ${desiredNickname}`);
        } catch (error) {
            console.error('Failed to set nickname:', error);
        }
    }
}


let counts = {};

client.on('messageCreate', async (message) => {
    console.log(message.member.displayName + " " + message.author + " " + message.content);

    if (message.content == 'nigger') {
        const id = message.member.id;
        if (!counts[id]) {
            counts[id] = 0;
        }
        counts[id]++;
        message.reply('watch out');
        message.delete()
        console.log(counts[id]);
    }

    if (counts[id] && counts[id] == 3) {
        try {
            await message.member.kick('Repeated violation');
            console.log(`Kicked ${message.author.tag} for repeated violation`);
            counts[id] = 0;
        } catch (err) {
            console.error('Failed to kick member:', err);
        }
    }
});


client.on('interactionCreate',(interaction)=>{
    if(!interaction.isChatInputCommand()) return;

    if(interaction.commandName === 'change-nickname'){
        const userID = interaction.options.get('userid');
        console.log(userID)
        const nickname = interaction.options.get('nickname');
        console.log(nickname)
        async function checkAndChangeNickname(memberId, desiredNickname) {
            const guild = client.guilds.cache.get('861317668198678558');
            if (!guild) {
                console.error('Guild not found');
                return;
            }
        
            let member = guild.members.cache.get(memberId);
        
        
            try {
                member = await guild.members.fetch(memberId);
            } catch (error) {
                console.error('Failed to fetch member:', error);
                return;
            }
        
        
        
            if (member.displayName !== desiredNickname) {
                try {
        
                    await member.setNickname(desiredNickname);
                    //console.log(`Changed nickname for ${member.user.tag} to ${desiredNickname}`);
                } catch (error) {
                    console.error('Failed to set nickname:', error);
                }
            }
        }
        checkAndChangeNickname(userID, nickname)
    }
})